{
  "permissions": {
    "allow": [
      "Bash(npm run build:*)",
      "Bash(npm run package:win:*)",
      "Bash(npm run rebuild:*)",
      "Bash(npm install:*)",
      "Bash(npx electron-rebuild:*)",
      "Bash(rm:*)",
      "Bash(ELECTRON_SKIP_BINARY_DOWNLOAD=1 npm install --ignore-scripts)",
      "Bash(grep:*)",
      "Bash(npm start)",
      "Bash(electron:*)",
      "Bash(npx:*)",
      "Bash(ss:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(node:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(env)",
      "Bash(npm run typecheck:*)",
      "Bash(npm test:*)",
      "Bash(sed:*)",
      "Bash(LUNA_DISABLE_EMBEDDINGS=1 npm test test/integration/memory.e2e.test.ts)",
      "Bash(LUNA_DISABLE_EMBEDDINGS=1 npm test)",
      "Bash(npm run dev:*)",
      "Bash(killall:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git reset:*)",
      "Bash(apt list:*)",
      "Bash(git lfs track:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(tsc --project tsconfig.json)",
      "Bash(cp:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(NODE_ENV=production npx electron dist/app/main/main.js)",
      "Bash(mv:*)",
      "Bash(timeout 30 npm run build)",
      "Bash(timeout:*)",
      "Bash(mkdir:*)",
      "Bash(curl:*)",
      "Bash(powershell:*)",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -Command \"Get-Process node,electron -ErrorAction SilentlyContinue | Stop-Process\")",
      "Bash(cd:*)",
      "Read(//mnt/c/dev/**)",
      "Bash(npm uninstall:*)",
      "Bash(npm rebuild:*)",
      "Bash(ip route:*)",
      "Bash(awk:*)",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -ExecutionPolicy Bypass -File /mnt/c/dev/luna-agent-v1.0-production-complete-2/setup-wsl-port-forward.ps1)",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -ExecutionPolicy Bypass -File C:\\dev\\luna-agent-v1.0-production-complete-2\\setup-wsl-port-forward.ps1)",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -Command \"Invoke-WebRequest -Uri ''http://localhost:3000/health'' -UseBasicParsing | Select-Object StatusCode, Content\")",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -Command \"netsh interface portproxy show v4tov4\")",
      "WebFetch(domain:localhost)"
    ],
    "deny": []
  }
}